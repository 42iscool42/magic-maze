/******/ (function(modules, runtime) { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/
/******/ 	// the startup function
/******/ 	function startup() {
/******/ 		// Load entry module and return exports
/******/ 		return __webpack_require__("./src/client/create/js/main.js");
/******/ 	};
/******/
/******/ 	// run startup
/******/ 	return startup();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/postcss-loader/src/index.js!./src/client/create/scss/main.scss":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/postcss-loader/src!./src/client/create/scss/main.scss ***!
  \***********************************************************************************************************************************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"@charset \\\"UTF-8\\\";\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box; }\\n\\nbody {\\n  overflow: hidden;\\n  touch-action: none;\\n  display: flex; }\\n\\n#ui {\\n  position: relative;\\n  width: 300px;\\n  height: 100vh;\\n  background-color: #345;\\n  color: white;\\n  padding: 2em;\\n  font-family: sans-serif; }\\n  #ui #admin {\\n    position: absolute;\\n    width: 100%;\\n    bottom: 0;\\n    left: 0;\\n    padding: 2em;\\n    background-color: rgba(0, 0, 0, 0.1);\\n    transition: bottom .5s ease-in-out; }\\n    #ui #admin:empty {\\n      bottom: -100%;\\n      padding: 0; }\\n\\n#canvas-wrap {\\n  flex: 1;\\n  background-color: #f5faff; }\\n\\np {\\n  margin-bottom: 1em; }\\n\\nh3 {\\n  font-size: 1rem;\\n  text-align: center;\\n  font-weight: normal;\\n  margin-bottom: 1em; }\\n\\nbutton {\\n  display: block;\\n  color: inherit;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  border: none;\\n  border-radius: 4px;\\n  margin: 1em auto 0 auto;\\n  padding: 1em 2em;\\n  cursor: pointer;\\n  text-transform: uppercase;\\n  font-size: .8em;\\n  letter-spacing: .05em; }\\n  button:focus {\\n    outline: none; }\\n  button:not(.disabled):hover, button:not(.disabled):focus {\\n    background-color: rgba(0, 0, 0, 0.3); }\\n  button.disabled {\\n    opacity: .6;\\n    cursor: not-allowed; }\\n\\ninput[type=\\\"number\\\"] {\\n  width: 64px;\\n  height: 24px;\\n  padding: 16px;\\n  font-size: 1em;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  color: inherit;\\n  border: none;\\n  border-radius: 4px; }\\n  input[type=\\\"number\\\"]:hover, input[type=\\\"number\\\"]:focus {\\n    outline: none;\\n    background-color: rgba(0, 0, 0, 0.3); }\\n  input[type=\\\"number\\\"]::-webkit-outer-spin-button, input[type=\\\"number\\\"]::-webkit-inner-spin-button {\\n    -webkit-appearance: none; }\\n\\ninput[type=\\\"checkbox\\\"] {\\n  position: relative;\\n  width: 32px;\\n  height: 32px;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  border: none;\\n  border-radius: 4px;\\n  -webkit-appearance: none;\\n  cursor: pointer;\\n  vertical-align: middle; }\\n  input[type=\\\"checkbox\\\"]:hover, input[type=\\\"checkbox\\\"]:focus {\\n    outline: none;\\n    background-color: rgba(0, 0, 0, 0.3); }\\n  input[type=\\\"checkbox\\\"]:checked::after {\\n    content: \\\"✓\\\";\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    font-weight: bold;\\n    color: white;\\n    font-size: 1.6em;\\n    -webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%); }\\n\\ninput[type=\\\"checkbox\\\"] {\\n  position: relative;\\n  width: 32px;\\n  height: 32px;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  border: none;\\n  border-radius: 4px;\\n  -webkit-appearance: none;\\n  cursor: pointer;\\n  vertical-align: middle; }\\n  input[type=\\\"checkbox\\\"]:hover, input[type=\\\"checkbox\\\"]:focus {\\n    outline: none;\\n    background-color: rgba(0, 0, 0, 0.3); }\\n  input[type=\\\"checkbox\\\"]:checked::after {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    content: \\\"✓\\\";\\n    color: white;\\n    font-size: 1.6em;\\n    -webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%); }\\n\\nlabel {\\n  display: inline-block;\\n  margin-left: .5em;\\n  pointer-events: none; }\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./src/client/create/scss/main.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ (function(module) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, module, __webpack_require__.nc */
/***/ (function(module, __unusedexports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ (function(module) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/client/create/js/main.js":
/*!**************************************!*\
  !*** ./src/client/create/js/main.js ***!
  \**************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__ */
/***/ (function(__unusedmodule, __unusedexports, __webpack_require__) {

eval("__webpack_require__(/*! ../scss/main.scss */ \"./src/client/create/scss/main.scss\");\n\nconst config = {\n    size: 100,\n    tolerance: 4,\n    colors: {\n        green: '#57bd6a',\n        orange: '#e87b1a',\n        purple: '#961c91',\n        yellow: '#f7dc0a'\n    }\n}\n\nlet canvas;\nlet tile;\nlet tool = 'wall'; // wall, enter, gate, vortex\nlet color = 'green';\nlet p1 = false;\nlet p2 = false;\n\nfunction setup() {\n    canvas = createCanvas(500, 500);\n    tile = new Tile();\n}\n\nfunction draw() {\n    background('255');\n    translate(width / 2 - config.size * 2, height / 2 - config.size * 2);\n\n    // Background grid\n    grid();\n\n    // Display tile\n    tile.display();\n}\n\nfunction mousePressed() {\n    const mouseCell = getHoveredCell();\n    if (!mouseCell) return;\n    const cell = tile.layout[mouseCell.x][mouseCell.y];\n    const x = cell.coord.x;\n    const y = cell.coord.y;\n\n    if (tool === 'wall' || tool === 'wall-orange') {\n        const side = getHoveredSide(mouseCell);\n        if (!side) return;\n        let state = cell.walls[side];\n\n        if (tool === 'wall-orange') {\n            if (state === true || state === false) {\n                state = 'orange';\n            } else if (state === 'orange') {\n                state = false;\n            }\n        } else {\n            if (state === 'orange') {\n                state = true\n            } else {\n                state = !state;\n            }\n        }\n\n        // Add/remove wall\n        cell.walls[side] = state;\n\n\n        // Add/remove same wall to neighbour cell\n        if (side === 'top' && tile.layout[x][y - 1]) {\n            tile.layout[x][y - 1].walls.bottom = state;\n        } else if (side === 'right' && tile.layout[x + 1]) {\n            tile.layout[x + 1][y].walls.left = state;\n        } else if (side === 'bottom' && tile.layout[x][y + 1]) {\n            tile.layout[x][y + 1].walls.top = state;\n        } else if (side === 'left' && tile.layout[x - 1]) {\n            tile.layout[x - 1][y].walls.right = state;\n        }\n    } else if (tool === 'escalator') {\n        if (!p1) {\n            p1 = {x: x, y: y};\n        } else if (!p2) {\n            // Escalator can't go to same cell\n            if (x === p1.x && y === p1.y) return;\n\n            p2 = {x: x, y: y};\n\n            tile.layout[p1.x][p1.y].escalator = {x: p2.x, y: p2.y};\n            tile.layout[p2.x][p2.y].escalator = {x: p1.x, y: p1.y};\n        } else {\n            if (tile.layout[x][y].escalator) {\n                // Clicked on a cell with an escalator, remove it\n                const _x = tile.layout[x][y].escalator.x;\n                const _y = tile.layout[x][y].escalator.y;\n                tile.layout[_x][_y].escalator = false;\n                tile.layout[x][y].escalator = false;\n            } else {\n                p1 = {x: x, y: y};\n                p2 = false;\n            }\n        }\n    } else {\n        // Enter, gate, vortex, exit, time, crystal ball and camera\n\n        // Remove item\n        if (cell.item && cell.item.type === tool && (['time', 'enter', 'crystal', 'camera'].indexOf(tool) > -1 || cell.item.color === color)) {\n            cell.item = false;\n            return;\n        }\n\n        // gates have only four possible cells to be set on\n        if (tool === 'gate' || tool === 'enter') {\n            if (!(\n                (x === 0 && y === 1) ||\n                (x === 1 && y === 3) ||\n                (x === 2 && y === 0) ||\n                (x === 3 && y === 2)\n            )) return;\n        }\n\n        // Exits too but not the same\n        if (tool === 'exit') {\n            if (!(\n                (x === 0 && y === 0) ||\n                (x === 0 && y === 3) ||\n                (x === 3 && y === 0) ||\n                (x === 3 && y === 3)\n            )) return;\n        }\n\n        // All gates and vortexes should have a color\n        if ((tool === 'gate' || tool === 'vortex') && !color) return;\n\n        // Time, enter, crystal and camera have no color\n        if (tool === 'time' || tool === 'enter' || tool === 'crystal' || tool === 'camera') {\n            cell.item = {\n                'type': tool\n            }\n        } else {\n            cell.item = {\n                'type': tool,\n                'color': color\n            }\n        }\n    }\n}\n\nclass Tile {\n    constructor(id) {\n        this.x = 0;\n        this.y = 0;\n        this.layout = {};\n\n        for (let i = 0; i < 4; i += 1) {\n            this.layout[i] = {};\n\n            for (let j = 0; j < 4; j += 1) {\n                this.layout[i][j] = new Cell(i, j);\n            }\n        }\n    }\n\n    display() {\n        fill('#f5faff');\n\n        for (let i = 0; i < 4; i += 1) {\n            for (let j = 0; j < 4; j += 1) {\n                // For each cell\n                const cell = this.layout[i][j];\n\n                push();\n                translate(i * config.size, j * config.size);\n\n                // Draw basic grid\n                blendMode(MULTIPLY);\n                stroke(240);\n                strokeWeight(2);\n                rect(0, 0, config.size, config.size);\n\n                stroke(0);\n\n                // Add item to cell\n                let item = cell.item;\n                if (item) {\n                    if (item.type === 'vortex') {\n                        fill(config.colors[item.color]);\n                        noStroke();\n                        ellipse(config.size/2, config.size/2, config.size/2, config.size/2);\n                        stroke(0);\n                    } else if (item.type === 'article') {\n                        noStroke();\n                        fill(config.colors[item.color]);\n                        star(config.size / 2, config.size / 2, 10, 25, 5);\n                    } else if (item.type === 'crystal') {\n                        stroke(config.colors['purple']);\n                        star(config.size / 2, config.size / 2, 28, 32, 20);\n                    } else if (item.type === 'camera') {\n                        stroke(0, 0, 0);\n                        fill(255, 200, 0);\n                        polygon(config.size / 2, config.size / 2, 32, 6);\n                    } else if (item.type === 'gate' || item.type === 'enter' || item.type === 'exit') {\n                        // Set color (for gate & exit)\n                        if (config.colors[item.color]) {\n                            fill(config.colors[item.color]);\n                            stroke(config.colors[item.color]);\n                        }\n\n                        if (j === 0 && i < 3) {\n                            arrow(item.type);\n                        } else if (j === 3 && i > 0) {\n                            push();\n                            rotate(PI);\n                            translate(-config.size, -config.size);\n                            arrow(item.type);\n                            pop();\n                        } else if (i === 0) {\n                            push();\n                            translate(0, config.size);\n                            rotate(-PI/2);\n                            arrow(item.type);\n                            pop();\n                        } else if (i === 3) {\n                            push();\n                            translate(config.size, 0);\n                            rotate(PI/2);\n                            arrow(item.type);\n                            pop();\n                        }\n                    } else if (item.type === \"time\") {\n                        blendMode(NORMAL);\n                        stroke(0);\n                        fill(255);\n                        ellipse(config.size / 2, config.size / 2, 40, 40);\n                        line(config.size / 2, config.size / 2 + 2, config.size / 2 - 7, config.size / 2 - 5);\n                        line(config.size / 2, config.size / 2 + 2, config.size / 2 + 10, config.size / 2 - 9);\n                    }\n                }\n\n                let esc = cell.escalator;\n                if (esc) {\n                    stroke(0, 0, 255);\n                    const x1 = config.size / 2;\n                    const y1 = config.size / 2;\n                    const x2 = config.size / 2 + (esc.x - i) * config.size;\n                    const y2 = config.size / 2 + (esc.y - j) * config.size;\n                    line(x1, y1, x2, y2);\n                }\n\n                // Draw walls\n                blendMode(NORMAL);\n                if (cell.walls.top) {\n                    stroke(0);\n                    if (cell.walls.top === 'orange') stroke(config.colors['orange']);\n                    line(0, 0, config.size, 0);\n                }\n                if (cell.walls.right) {\n                    stroke(0);\n                    if (cell.walls.right === 'orange') stroke(config.colors['orange']);\n                    line(config.size, 0, config.size, config.size);\n                }\n                if (cell.walls.bottom) {\n                    stroke(0);\n                    if (cell.walls.bottom === 'orange') stroke(config.colors['orange']);\n                    line(0, config.size, config.size, config.size);\n                }\n                if (cell.walls.left) {\n                    stroke(0);\n                    if (cell.walls.left === 'orange') stroke(config.colors['orange']);\n                    line(0, 0, 0, config.size);\n                }\n\n                pop();\n            }\n        }\n    }\n}\n\nclass Cell {\n    constructor(x, y) {\n        this.coord = {\n            x: x,\n            y: y\n        };\n        this.walls = {};\n\n        // Build generic outer walls\n        this.walls.top = (y === 0 && x !== 2);\n        this.walls.right = (x === 3 && y !== 2);\n        this.walls.bottom = (y === 3 && x !== 1);\n        this.walls.left = (x === 0 && y !== 1);\n\n        this.item = false;\n        this.escalator = false;\n    }\n}\n\n/**\n* Draw background grid\n*/\nfunction grid() {\n    for (let i = 0; i < 4; i += 1) {\n        for (let j = 0; j < 4; j += 1) {\n            push();\n            translate(i * config.size, j * config.size);\n\n            // Draw cell\n            stroke(240);\n            rect(0, 0, config.size, config.size);\n\n            pop();\n        }\n    }\n}\n\n/**\n* Draw an arrow\n* @param  {string} type gate, enter\n*/\nfunction arrow(type) {\n    if (type === 'gate') {\n        // Linear arrow\n        blendMode(NORMAL);\n        line(config.size/2, config.size/4, config.size/2, config.size/1.5);\n        line(config.size/2, config.size/4, config.size/3, config.size/2.5);\n        line(config.size/2, config.size/4, config.size/1.5, config.size/2.5);\n        blendMode(MULTIPLY);\n    } else if (type === 'enter') {\n        // Filled arrow\n        strokeJoin(ROUND);\n        strokeCap(ROUND);\n        stroke(150);\n        blendMode(NORMAL);\n        fill(255);\n        beginShape();\n        vertex(config.size/2.25, config.size/3);\n        vertex(config.size/2.25, config.size/4);\n        vertex(config.size/1.7, config.size/4);\n        vertex(config.size/1.7, config.size/3);\n        vertex(config.size/1.5, config.size/3);\n        vertex(config.size/1.93, config.size/2);\n        vertex(config.size/2.75, config.size/3);\n        vertex(config.size/2.75, config.size/3);\n        endShape(CLOSE);\n    } else if (type === 'exit') {\n        // Linear arrow with rectangle\n        strokeJoin(ROUND);\n        strokeCap(ROUND);\n        blendMode(NORMAL);\n        line(config.size/2, config.size/2, config.size/2, config.size/1.4);\n        line(config.size/2, config.size/2, config.size/2 - 10, config.size/1.7);\n        line(config.size/2, config.size/2, config.size/2 + 10, config.size/1.7);\n        rect(config.size/2 - 15, config.size/2 - 25, 30, 15);\n    }\n}\n\n/**\n* Draw a star\n* @param  {int} x  X coordinate\n* @param  {int} y  Y coordinate\n* @param  {int} r1 inner radius\n* @param  {int} r2 outer radius\n* @param  {int} n  points (branches)\n*/\nfunction star(x, y, r1, r2, n) {\n    var angle = TWO_PI / n;\n    beginShape();\n    for (let a = TWO_PI / (-n * 4); a <= TWO_PI; a += angle) {\n        let sx = x + cos(a) * r2;\n        let sy = y + sin(a) * r2;\n        vertex(sx, sy);\n        sx = x + cos(a + angle / 2) * r1;\n        sy = y + sin(a + angle / 2) * r1;\n        vertex(sx, sy);\n    }\n    endShape(CLOSE);\n}\n\n/**\n* Draw a polygon\n* @param  {int} x X coordinate\n* @param  {int} y Y coordinate\n* @param  {int} r radius\n* @param  {int} n points (sides)\n*/\nfunction polygon(x, y, r, n) {\n    let angle = TWO_PI / n;\n    beginShape();\n\n    for (let a = 0; a < TWO_PI; a += angle) {\n        let sx = x + cos(a) * r;\n        let sy = y + sin(a) * r;\n        vertex(sx, sy);\n    }\n    endShape(CLOSE);\n}\n\n/**\n* Get hovered cell coordinates\n* @return {Object} position {x, y}\n*/\nfunction getHoveredCell() {\n    const x = floor((2 * config.size + mouseX - width / 2) / config.size);\n    const y = floor((2 * config.size + mouseY - width / 2) / config.size);\n\n    if (x < 0 || x > 3 || y < 0 || y > 3) {\n        return false;\n    }\n\n    return {x: x, y: y}\n}\n\n/**\n* Get closest side of cell\n* @return {string|bool}  top, bottom, left, right or false\n*/\nfunction getHoveredSide() {\n    let side = false;\n    const x = (mouseX - width / 2 + config.size * 2) % config.size;\n    const y = (mouseY - width / 2 + config.size * 2) % config.size;\n\n    // Detect closest side of cell\n    if (x < config.size / config.tolerance) {\n        side = 'left';\n    } else if (config.size - x < config.size / config.tolerance) {\n        side = 'right';\n    }\n\n    if (y < config.size / config.tolerance) {\n        side = 'top';\n    } else if (config.size - y < config.size / config.tolerance) {\n        side = 'bottom';\n    }\n\n    return side;\n}\n\n/**\n* Clear tile and restore default\n*/\nfunction clearTile() {\n    for (let j = 0; j < 4; j += 1) {\n        for (let i = 0; i < 4; i += 1) {\n            const cell = tile.layout[i][j];\n\n            // Remove all walls\n            cell.walls = {\n                'top': false,\n                'right': false,\n                'bottom': false,\n                'left': false\n            }\n\n            // Restore generic walls\n            cell.walls.top = (j === 0 && i !== 2);\n            cell.walls.right = (i === 3 && j !== 2);\n            cell.walls.bottom = (j === 3 && i !== 1);\n            cell.walls.left = (i === 0 && j !== 1);\n\n            // Remove item and escalator\n            cell.item = false;\n            cell.escalator = false;\n        }\n    }\n}\n\n/**\n* Randomize tile walls and items\n*/\nfunction randomize() {\n    clearTile();\n    for (let j = 0; j < 4; j += 1) {\n        for (let i = 0; i < 4; i += 1) {\n            const cell = tile.layout[i][j];\n\n            // Randomize all walls\n            // cell.walls = {\n            //     'top': Math.random() < .5 ? true : false,\n            //     'right': Math.random() < .5 ? true : false,\n            //     'bottom': Math.random() < .5 ? true : false,\n            //     'left': Math.random() < .5 ? true : false\n            // }\n        }\n    }\n}\n\n/**\n* Save canvas as a 600*600 JPG image\n*/\nfunction exportImage() {\n    let jpg = createGraphics(600, 600);\n    jpg.image(canvas, -70, -70, 740, 740);\n    save(jpg, 'tile.jpg');\n}\n\n/**\n* Export tile as a compressed string\n*/\nfunction exportString() {\n    const string = jsonToString(tileToJson(tile));\n    console.log(string);\n}\n\n/**\n* Convert tile data to JSON\n* @return {Object}  JSON\n*/\nfunction tileToJson() {\n    let json = {};\n\n    for (let i = 0; i < 4; i += 1) {\n        json[i] = {};\n\n        for (let j = 0; j < 4; j += 1) {\n            json[i][j] = {};\n            json[i][j].walls = {};\n\n            json[i][j].walls.top = tile.layout[j][i].walls.top;\n            json[i][j].walls.right = tile.layout[j][i].walls.right;\n            json[i][j].walls.bottom = tile.layout[j][i].walls.bottom;\n            json[i][j].walls.left = tile.layout[j][i].walls.left;\n\n            json[i][j]['item'] = tile.layout[j][i].item;\n            json[i][j]['escalator'] = tile.layout[j][i].escalator;\n        }\n    }\n\n    return json;\n}\n\n/**\n* Convert tile json to compressed string\n* @param  {Object} json tile data\n* @return {string}      string\n*/\nfunction jsonToString(tile) {\n    // 64 characters\n    let string = '';\n\n    for (let x = 0; x < 4; x += 1) {\n        for (let y = 0; y < 4; y += 1) {\n\n            // Cell object\n            const cell = tile[x][y];\n\n            // 4 characters\n            let block = '';\n\n            // Walls\n            let base3 = '';\n            for (let wall of ['top', 'right', 'bottom', 'left']) {\n                if (cell.walls[wall] === 'orange') {\n                    base3 += 2;\n                } else if (cell.walls[wall]) {\n                    base3 += 1;\n                } else {\n                    base3 += 0;\n                }\n            }\n            block += parseInt(base3, 3);\n            block = block.length === 1 ? '0' + block : block;\n\n            // Item\n            let item = '0';\n\n            if (cell.item) {\n                if (cell.item.color) {\n                    let id = {\n                        'gate': 1,\n                        'vortex': 5,\n                        'article': 9,\n                        'exit': 13\n                    }[cell.item.type];\n\n                    id += ['green', 'orange', 'purple', 'yellow'].indexOf(cell.item.color);\n\n                    // Convert to base-36\n                    item = id.toString(36);\n                } else {\n                    item = {\n                        'enter': 'h',\n                        'time': 'i',\n                        'crystal': 'j',\n                        'camera': 'k'\n                    }[cell.item.type];\n                }\n            }\n            block += item;\n\n            // Escalator\n            let escalator = '0';\n\n            if (cell.escalator) {\n                escalator = cell.escalator.x * 4 + cell.escalator.y + 1;\n\n                // Convert to base-36\n                escalator = escalator.toString(36);\n            }\n            block += escalator;\n            string += block;\n        }\n    }\n\n    return string;\n}\n\n/**\n* General click actions\n*/\n\n$(document).on('click', 'ul li', (e) => {\n    const $el = $(e.currentTarget);\n\n    if ($el.attr('data-color')) {\n        color = $el.attr('data-color');\n    } else if ($el.attr('data-tool')) {\n        tool = $el.attr('data-tool');\n    }\n\n    updateUI();\n});\n\n$(document).on('click', 'button[name=\"clear\"]', () => {\n    clearTile();\n});\n\n$(document).on('click', 'button[name=\"random\"]', () => {\n    randomize();\n});\n\n$(document).on('click', 'button[name=\"export\"]', () => {\n    exportImage();\n    exportString();\n});\n\n/**\n* General key press actions\n* @param {Object} e event\n*/\nfunction keyPressed(e) {\n    if (keyIsDown(49)) { // 1\n        tool = 'wall';\n    } else if (keyIsDown(50)) { // 2\n        tool = 'wall-orange';\n    } else if (keyIsDown(51)) { // 3\n        tool = 'enter';\n    } else if (keyIsDown(52)) { // 4\n        tool = 'gate';\n    } else if (keyIsDown(53)) { // 5\n        tool = 'vortex';\n    } else if (keyIsDown(54)) { // 6\n        tool = 'article';\n    } else if (keyIsDown(55)) { // 7\n        tool = 'exit';\n    } else if (keyIsDown(56)) { // 8\n        tool = 'time';\n    } else if (keyIsDown(57)) { // 9\n        tool = 'escalator';\n    } else if (keyIsDown(71)) { // G\n        color = 'green';\n    } else if (keyIsDown(79)) { // O\n        color = 'orange';\n    } else if (keyIsDown(80)) { // P\n        color = 'purple';\n    } else if (keyIsDown(89)) { // Y\n        color = 'yellow';\n    }\n\n    updateUI();\n}\n\n/**\n* Update UI elements (tools and colors selectors)\n*/\nfunction updateUI() {\n    $('ul.tools').find('li.selected').removeClass('selected');\n    $('ul.tools').find('li[data-tool=\"' + tool + '\"]').addClass('selected');\n\n    $('ul.colors').find('li.selected').removeClass('selected');\n    $('ul.colors').find('li[data-color=\"' + color + '\"]').addClass('selected');\n\n    if (tool === 'gate' || tool === 'vortex' || tool === 'exit' || tool === 'article') {\n        $('.colors').css('opacity', 1);\n    } else {\n        $('.colors').css('opacity', 0);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/client/create/js/main.js?");

/***/ }),

/***/ "./src/client/create/scss/main.scss":
/*!******************************************!*\
  !*** ./src/client/create/scss/main.scss ***!
  \******************************************/
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, module */
/***/ (function(module, __unusedexports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/postcss-loader/src!./main.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/postcss-loader/src/index.js!./src/client/create/scss/main.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/client/create/scss/main.scss?");

/***/ })

/******/ });